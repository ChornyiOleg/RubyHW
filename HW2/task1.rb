"int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]"

p "Узнать количество элементов в массиве"

p "int_arr.count"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.count
p "----------------------------------------------------------------------------------"

p "Перевернуть массив"

p "int_arr.reverse"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.reverse
p "----------------------------------------------------------------------------------"

p "Найти наибольшее число"

p "int_arr.max"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.max
p "----------------------------------------------------------------------------------"

p "Найти наименьшее число"

p "int_arr.min"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.min
p "----------------------------------------------------------------------------------"

p "Отсортировать от меньшего к большему"

p "int_arr.sort"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.sort
p "----------------------------------------------------------------------------------"

p "Отсортировать от большего к меньшему"

p "int_arr.sort { |a, b| b <=> a }"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.sort { |a, b| b <=> a }
p "----------------------------------------------------------------------------------"
 
p "Удалить все нечетные числа"

p "int_arr.delete_if { |e| e.odd? }"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.delete_if { |e| e.odd? }
p "----------------------------------------------------------------------------------"

p "Оставить только те числа, которые без остатка делятся на 3"

p "int_arr.find_all { |e| e%3 == 0 }"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.find_all { |e| e%3 == 0 }
p "----------------------------------------------------------------------------------"

p "Удалить из массива числа, которые повторяются (то есть, нужно вывести массив, в котором нет повторов"

p "int_arr.uniq"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.uniq
p "----------------------------------------------------------------------------------"

p "Разделить каждый элемент на 10, в результате элементы не должны быть округлены до целого"

p "int_arr.map { |e| e = e.to_f/10 }"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.map { |e| e = e.to_f/10 }
p "----------------------------------------------------------------------------------"

p "Получить новый массив, который бы содержал в себе те буквы английского алфавита, порядковый номер которых есть в нашем массиве"

p "p abc = [''] + ('a'..'z').to_a"
p "arr_abc = []"
p "abc.each.with_index{ |e, i| arr_abc << e if int_arr.include?(i) }"
p "arr_abc"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p abc = [''] + ('a'..'z').to_a
p arr_abc = []
p abc.each.with_index{ |e, i| arr_abc << e if int_arr.include?(i) }
p arr_abc
p "----------------------------------------------------------------------------------"

p "Поменять местами минимальный и максимальный элементы массива"

p "int_arr.index(int_arr.max) < int_arr.index(int_arr.min) ? (int_arr[int_arr.index(int_arr.min)], int_arr[int_arr.index(int_arr.max)] = int_arr[int_arr.index(int_arr.max)], int_arr[int_arr.index(int_arr.min)]) : (int_arr[int_arr.index(int_arr.max)], int_arr[int_arr.index(int_arr.min)] = int_arr[int_arr.index(int_arr.min)], int_arr[int_arr.index(int_arr.max)
])"
p "int_arr"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.index(int_arr.max) < int_arr.index(int_arr.min) ? (int_arr[int_arr.index(int_arr.min)], int_arr[int_arr.index(int_arr.max)] = int_arr[int_arr.index(int_arr.max)], int_arr[int_arr.index(int_arr.min)]) : (int_arr[int_arr.index(int_arr.max)], int_arr[int_arr.index(int_arr.min)] = int_arr[int_arr.index(int_arr.min)], int_arr[int_arr.index(int_arr.max)
])
p int_arr
p "----------------------------------------------------------------------------------"

p "Найти элементы, которые находятся перед минимальным числом в массиве"

p "int_arr[0...int_arr.index(int_arr.min)]"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr[0...int_arr.index(int_arr.min)]
p "----------------------------------------------------------------------------------"
 
p "Необходимо найти три наименьших элемента."

p "int_arr.min(3)"
p int_arr = [621, 445, 147, 159, 430, 222, 482, 44, 194, 522, 652, 494, 14, 126, 532, 387, 441, 471, 337, 446, 18, 36, 202, 574, 556, 458, 16, 139, 222, 220, 107, 82, 264, 366, 501, 319, 314, 430, 55, 336]
p int_arr.min(3)

p "another one"
p "int_arr.sort[0...3]"
p int_arr.sort[0...3]
p "----------------------------------------------------------------------------------"